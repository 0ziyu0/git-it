  Create a new branch for your contribution.

  --------------------------------------------------------------------
  
  {bold}{cyan}
  Branching{/bold}
  ---------{/cyan}

  It's common practice when working on a project or with others on a
  project to create a {bold}branch{/bold} to put your changes in. This
  way you can do you work while the main, commonly named 'master',
  branch stays stable. 
  
  {cyan}GitHub Pages{/cyan}
  
  GitHub.com will automatically serve and host static website files in 
  branches named 'gh-pages'. Since the project you forked creates a 
  website, its main branch is 'gh-pages'. All sites like this can be 
  found using this pattern for the URL: 
  
  http://githubusername.github.io/repositoryname
  
  {bold}{cyan}
  How to create branches{/bold}
  ----------------------{/cyan}

  When you create a branch, Git copies everything from the current 
  branch you're on and places it in the branch you've requested.

  $ git branch <BRANCHNAME>

  To go into that branch and work on it, similar to using `cd` to 
  change directory in terminal, you {bold}checkout{/bold} a branch.

  $ git checkout <BRANCHNAME>

  {cyan}
  Contribution, license and readme docs{/cyan}
  
  Many open source projects contain contribution, license and readme
  documents that let users know what they need to know about using
  and contributing to the project.
  
  {bold}{cyan}
  Create branch and new file{/bold}
  --------------------------{/cyan}

  Create a branch and name it "add-<username>", where 'username' is 
  your username. For instance, "add-jlord". Then move onto that branch.
  
  Now, in the 'contributors' folder, create a new file named 
  "add-<username>.txt", where 'username' is your username. For instance, 
  "add-jlord.txt". Then, just write your username in it (that's it!).  
  
  {bold}{cyan}
  Check-in{/bold}
  --------{/cyan}
  
  Go through the steps for checking in a project: 
  
  $ git status
  $ git add <filename>
  $ git commit -m "commit message"
  
  Now push you update to GitHub:
  
  $ git push origin <BRANCHNAME>
  
  Type `git-it verify` when you're done.
  
  
  {yellow}
  **GIT TIPS**
  ------------

  You can create and switch to a branch in one line:

  $ git checkout -b <BRANCHNAME>

  Rename a branch you're currently on:
  
  $ git branch -m <NEWBRANCHNAME>

  Verify what branch you're working on

  $ git status{/yellow}

  --------------------------------------------------------------------
