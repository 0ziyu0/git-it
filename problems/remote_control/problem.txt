  Set up GitHub and push your repository to GitHub.com for sharing.

  --------------------------------------------------------------------

  The repository you've created so far is just on your computer, which
  is handy, but makes it pretty hard to share and work with others on. 
  No worries, that's what GitHub.com is for! 

  {bold}{cyan}
  Create a GitHub Account{/bold}
  -----------------------{/cyan}
  
  GitHub is a website that alows people everywhere to share what 
  they're working on with Git and to easily work together.

  - Visit {bold}http://www.github.com{/bold} and sign up for a free account.
  - High five, welcome!
  
  {bold}{cyan}
  Configure Git{/bold}
  -------------{/cyan}

  You'll want to let Git know who to associate the changes you make to 
  by telling it your GitHub account name and email address.

  Open a new terminal {bold}(CMD + N){/bold} window and set your name:

  $ git config --global user.name "Your Name"
  
  Then add your GitHub username:
  
  $ git config --global user.username githubusername

  Now set your email:

  $ git config --global user.email youremail@example.com

  {bold}{cyan}
  Create a Remote Repository{/bold}
  --------------------------{/cyan}

  You want to sync your {bold}local{/bold} version with one stored on GitHub.com
  called the {bold}remote{/bold} version.

  - Go to {bold}www.github.com{/bold}, log in, and click the '+' in the top right to
  create a new repository.
  - Give it a name that matches your local repository's name and a short 
  description.
  - Make it public.
  - Initialize with a README.
  - For now, leave .gitignore and license on 'none'.
  - Click create repository!
  
  {cyan}
  Readmes, .gitignores and Licenses{/cyan}
  
  These are common files in open source projects. A {bold}readme{/bold} explains 
  what the project is, how to use it, and often times, how to contribute
  (though sometime there is an extra file, CONTRIBUTING.md, for
  those details). A {bold}.gitignore{/bold} is a list of files that
  Git should *not* track (for instance, files with passwords!). A
  {bold}license{/bold} file is the type of license you put on your
  project, information on the types is here: {bold}www.choosealicense.com{/bold}.

  {bold}{cyan}
  Connect your Local to your Remote{/bold}
  ---------------------------------{/cyan}
  
  Now you've got an empty repository started on GitHub.com. On the 
  right side of the page, mid way down, you'll find a small bar with
  labeled 'HTTPS clone URL'. This is the address to your remote
  repository, copy it.

  Back in your terminal, you want to tell Git the location of the
  remote version. This is commonly named `origin`.

  $ git remote add origin <URLFROMGITHUB>

  Now you want to {bold}push{/bold} everything you've done locally
  to GitHub on a branch named `master` (we'll learn more about branches
  later).

  $ git push origin master

  Go to GitHub and refresh the page of your repository. WOAH! 

  {cyan}
  **GIT TIPS**
  ------------

  {bold}Add remote connections{/bold}

  $ git remote add <REMOTENAME> <URL>

  {bold}View remote connections{/bold}

  $ git remote -v

  {bold}Push changes{/bold}

  $ git push <REMOTENAME> <URL>{/cyan}

  --------------------------------------------------------------------